import CustomIDL

Model:
    imports+=Import*
    (
    algo_packages+=AlgoPackage
    |
    packages+=Package // only to be included! Else no code can be generated for them
    )*
;

AlgoPackage:
    "algo_package" name=ID "{"
    (target_namespace=TargetNamespace)?
    (
    packages+=AlgoPackage
    |
    algos+=Algo
    |
    cpp_algos+=CppAlgo
    |
    python_algos+=PythonAlgo
    )*
    "}"
;

// ---------------------------------------------------------------------
/** An algorithm (language independent)
  */
Algo:
    "algo" name=ID "{"
        arguments+=AlgoArguments+
    "}"
;

// ---------------------------------------------------------------------
/** Arguments of an algorithm (language independent)
  */
AlgoArguments: AlgoIn|AlgoOut|AlgoInOut;
AlgoIn:     "in"    name=ID ":" type=[Struct|FQN];
AlgoOut:    "out"   name=ID ":" type=[Struct|FQN];
AlgoInOut:  "inout" name=ID ":" type=[Struct|FQN];

// ---------------------------------------------------------------------
/** C++ Algorithm:
  * The algo "name" is expected to be a function name
  * in a file namespace/namespace/name.h
  * (the namespace is either empty or the "TargetNamespace"
  *  in the parent AlgoPackage)
  *
  * The C++ function is expected to have
  * all inputs as const references and
  * all outputs and in/out arguments as non-const references.
  */
CppAlgo:    "C++"    name=ID ":" algo=[Algo|FQN];

// ---------------------------------------------------------------------
/** Python Algorithm
  */
PythonAlgo: "python" name=ID ":" algo=[Algo|FQN];
